kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/mac/Desktop/Payco/core/src/main/java/com/timkwali/core/presentation/components/textfield/PaycoTextField.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN FUNCTION_FOR_DEFAULT_PARAMETER name:PaycoTextField$default visibility:public modality:FINAL <> (value:kotlin.String, onValueChange:kotlin.Function1<kotlin.String, kotlin.Unit>, modifier:androidx.compose.ui.Modifier?, enabled:kotlin.Boolean, isError:kotlin.Boolean, singleLine:kotlin.Boolean, visualTransformation:androidx.compose.ui.text.input.VisualTransformation?, interactionSource:androidx.compose.foundation.interaction.MutableInteractionSource?, $mask0:kotlin.Int, $handler:kotlin.Any?) returnType:kotlin.Unit
  annotations:
    OptIn(markerClass = [CLASS_REFERENCE 'CLASS IR_EXTERNAL_DECLARATION_STUB ANNOTATION_CLASS name:ExperimentalMaterial3Api modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.reflect.KClass<androidx.compose.material3.ExperimentalMaterial3Api>])
    Composable
  VALUE_PARAMETER name:value index:0 type:kotlin.String
  VALUE_PARAMETER name:onValueChange index:1 type:kotlin.Function1<kotlin.String, kotlin.Unit>
  VALUE_PARAMETER name:modifier index:2 type:androidx.compose.ui.Modifier? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  VALUE_PARAMETER name:enabled index:3 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:isError index:4 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:singleLine index:5 type:kotlin.Boolean [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:visualTransformation index:6 type:androidx.compose.ui.text.input.VisualTransformation? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.text.input.VisualTransformation
  VALUE_PARAMETER name:interactionSource index:7 type:androidx.compose.foundation.interaction.MutableInteractionSource? [assignable]
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.foundation.interaction.MutableInteractionSource
  VALUE_PARAMETER MASK_FOR_DEFAULT_FUNCTION name:$mask0 index:8 type:kotlin.Int
  VALUE_PARAMETER METHOD_HANDLER_IN_DEFAULT_FUNCTION name:$handler index:9 type:kotlin.Any?
  BLOCK_BODY
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=4
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Modifier.Companion visibility:public [final,static] declared in androidx.compose.ui.Modifier' type=androidx.compose.ui.Modifier.Companion origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=8
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'enabled: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=true
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=16
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'isError: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=32
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'singleLine: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          CONST Boolean type=kotlin.Boolean value=false
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=64
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'visualTransformation: androidx.compose.ui.text.input.VisualTransformation? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun <get-None> (): androidx.compose.ui.text.input.VisualTransformation declared in androidx.compose.ui.text.input.VisualTransformation.Companion' type=androidx.compose.ui.text.input.VisualTransformation origin=GET_PROPERTY
            $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.text.input.VisualTransformation.Companion visibility:public [final,static] declared in androidx.compose.ui.text.input.VisualTransformation' type=androidx.compose.ui.text.input.VisualTransformation.Companion origin=null
    WHEN type=kotlin.Unit origin=null
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: CALL 'public final fun and (other: kotlin.Int): kotlin.Int [infix] declared in kotlin.Int' type=kotlin.Int origin=null
              $this: GET_VAR '$mask0: kotlin.Int declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=128
            arg1: CONST Int type=kotlin.Int value=0
        then: SET_VAR 'interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Unit origin=EQ
          CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
            <T>: androidx.compose.foundation.interaction.MutableInteractionSource
            calculation: BLOCK type=kotlin.Function0<androidx.compose.foundation.interaction.MutableInteractionSource> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun PaycoTextField$lambda$0 (): androidx.compose.foundation.interaction.MutableInteractionSource declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt' type=kotlin.Function0<androidx.compose.foundation.interaction.MutableInteractionSource> origin=INLINE_LAMBDA reflectionTarget=null
    RETURN type=kotlin.Nothing from='public final fun PaycoTextField$default (value: kotlin.String, onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, enabled: kotlin.Boolean, isError: kotlin.Boolean, singleLine: kotlin.Boolean, visualTransformation: androidx.compose.ui.text.input.VisualTransformation?, interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt'
      CALL 'public final fun PaycoTextField (value: kotlin.String, onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit>, modifier: androidx.compose.ui.Modifier, enabled: kotlin.Boolean, isError: kotlin.Boolean, singleLine: kotlin.Boolean, visualTransformation: androidx.compose.ui.text.input.VisualTransformation, interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource): kotlin.Unit declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt' type=kotlin.Unit origin=DEFAULT_STUB_CALL_TO_IMPLEMENTATION
        value: GET_VAR 'value: kotlin.String declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.String origin=null
        onValueChange: GET_VAR 'onValueChange: kotlin.Function1<kotlin.String, kotlin.Unit> declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=null
        modifier: TYPE_OP type=androidx.compose.ui.Modifier origin=IMPLICIT_CAST typeOperand=androidx.compose.ui.Modifier
          GET_VAR 'modifier: androidx.compose.ui.Modifier? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=androidx.compose.ui.Modifier? origin=null
        enabled: GET_VAR 'enabled: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Boolean origin=null
        isError: GET_VAR 'isError: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Boolean origin=null
        singleLine: GET_VAR 'singleLine: kotlin.Boolean [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=kotlin.Boolean origin=null
        visualTransformation: TYPE_OP type=androidx.compose.ui.text.input.VisualTransformation origin=IMPLICIT_CAST typeOperand=androidx.compose.ui.text.input.VisualTransformation
          GET_VAR 'visualTransformation: androidx.compose.ui.text.input.VisualTransformation? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=androidx.compose.ui.text.input.VisualTransformation? origin=null
        interactionSource: TYPE_OP type=androidx.compose.foundation.interaction.MutableInteractionSource origin=IMPLICIT_CAST typeOperand=androidx.compose.foundation.interaction.MutableInteractionSource
          GET_VAR 'interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource? [assignable] declared in com.timkwali.core.presentation.components.textfield.PaycoTextFieldKt.PaycoTextField$default' type=androidx.compose.foundation.interaction.MutableInteractionSource? origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.foundation.interaction.MutableInteractionSource origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:935)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetValue(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrSetValue.accept(IrSetValue.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1101)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 71 more


